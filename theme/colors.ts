// theme/colors.ts
import type { MD3Theme } from 'react-native-paper';
import materialTheme from './material-theme.json';

type MD3Colors = MD3Theme['colors'];

export const lightColors: MD3Colors = {
    primary: materialTheme.schemes.light.primary,
    onPrimary: materialTheme.schemes.light.onPrimary,
    primaryContainer: materialTheme.schemes.light.primaryContainer,
    onPrimaryContainer: materialTheme.schemes.light.onPrimaryContainer,
    secondary: materialTheme.schemes.light.secondary,
    onSecondary: materialTheme.schemes.light.onSecondary,
    secondaryContainer: materialTheme.schemes.light.secondaryContainer,
    onSecondaryContainer: materialTheme.schemes.light.onSecondaryContainer,
    tertiary: materialTheme.schemes.light.tertiary,
    onTertiary: materialTheme.schemes.light.onTertiary,
    tertiaryContainer: materialTheme.schemes.light.tertiaryContainer,
    onTertiaryContainer: materialTheme.schemes.light.onTertiaryContainer,
    error: materialTheme.schemes.light.error,
    onError: materialTheme.schemes.light.onError,
    errorContainer: materialTheme.schemes.light.errorContainer,
    onErrorContainer: materialTheme.schemes.light.onErrorContainer,
    background: materialTheme.schemes.light.background,
    onBackground: materialTheme.schemes.light.onBackground,
    surface: materialTheme.schemes.light.surface,
    onSurface: materialTheme.schemes.light.onSurface,
    surfaceVariant: materialTheme.schemes.light.surfaceVariant,
    onSurfaceVariant: materialTheme.schemes.light.onSurfaceVariant,
    outline: materialTheme.schemes.light.outline,
    outlineVariant: materialTheme.schemes.light.outlineVariant,
    shadow: materialTheme.schemes.light.shadow,
    scrim: materialTheme.schemes.light.scrim,
    inverseSurface: materialTheme.schemes.light.inverseSurface,
    inverseOnSurface: materialTheme.schemes.light.inverseOnSurface,
    inversePrimary: materialTheme.schemes.light.inversePrimary,
    elevation: {
        level0: 'transparent',
        level1: materialTheme.schemes.light.surfaceContainerLowest,
        level2: materialTheme.schemes.light.surfaceContainerLow,
        level3: materialTheme.schemes.light.surfaceContainer,
        level4: materialTheme.schemes.light.surfaceContainerHigh,
        level5: materialTheme.schemes.light.surfaceContainerHighest,
    },
    surfaceDisabled: `${materialTheme.schemes.light.onSurface}12`,
    onSurfaceDisabled: `${materialTheme.schemes.light.onSurface}38`,
    backdrop: `${materialTheme.schemes.light.scrim}40`,
};

export const darkColors: MD3Colors = {
    primary: materialTheme.schemes.dark.primary,
    onPrimary: materialTheme.schemes.dark.onPrimary,
    primaryContainer: materialTheme.schemes.dark.primaryContainer,
    onPrimaryContainer: materialTheme.schemes.dark.onPrimaryContainer,
    secondary: materialTheme.schemes.dark.secondary,
    onSecondary: materialTheme.schemes.dark.onSecondary,
    secondaryContainer: materialTheme.schemes.dark.secondaryContainer,
    onSecondaryContainer: materialTheme.schemes.dark.onSecondaryContainer,
    tertiary: materialTheme.schemes.dark.tertiary,
    onTertiary: materialTheme.schemes.dark.onTertiary,
    tertiaryContainer: materialTheme.schemes.dark.tertiaryContainer,
    onTertiaryContainer: materialTheme.schemes.dark.onTertiaryContainer,
    error: materialTheme.schemes.dark.error,
    onError: materialTheme.schemes.dark.onError,
    errorContainer: materialTheme.schemes.dark.errorContainer,
    onErrorContainer: materialTheme.schemes.dark.onErrorContainer,
    background: materialTheme.schemes.dark.background,
    onBackground: materialTheme.schemes.dark.onBackground,
    surface: materialTheme.schemes.dark.surface,
    onSurface: materialTheme.schemes.dark.onSurface,
    surfaceVariant: materialTheme.schemes.dark.surfaceVariant,
    onSurfaceVariant: materialTheme.schemes.dark.onSurfaceVariant,
    outline: materialTheme.schemes.dark.outline,
    outlineVariant: materialTheme.schemes.dark.outlineVariant,
    shadow: materialTheme.schemes.dark.shadow,
    scrim: materialTheme.schemes.dark.scrim,
    inverseSurface: materialTheme.schemes.dark.inverseSurface,
    inverseOnSurface: materialTheme.schemes.dark.inverseOnSurface,
    inversePrimary: materialTheme.schemes.dark.inversePrimary,
    elevation: {
        level0: 'transparent',
        level1: materialTheme.schemes.dark.surfaceContainerLowest,
        level2: materialTheme.schemes.dark.surfaceContainerLow,
        level3: materialTheme.schemes.dark.surfaceContainer,
        level4: materialTheme.schemes.dark.surfaceContainerHigh,
        level5: materialTheme.schemes.dark.surfaceContainerHighest,
    },
    surfaceDisabled: `${materialTheme.schemes.dark.onSurface}12`,
    onSurfaceDisabled: `${materialTheme.schemes.dark.onSurface}38`,
    backdrop: `${materialTheme.schemes.dark.scrim}40`,
};